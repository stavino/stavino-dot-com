[{"/Users/stephenavino/Development/Code/stavino-dot-com/src/index.js":"1","/Users/stephenavino/Development/Code/stavino-dot-com/src/App.js":"2","/Users/stephenavino/Development/Code/stavino-dot-com/src/reportWebVitals.js":"3","/Users/stephenavino/Development/Code/stavino-dot-com/src/components/Header.js":"4","/Users/stephenavino/Development/Code/stavino-dot-com/src/components/Homepage.js":"5"},{"size":587,"mtime":1682022440626,"results":"6","hashOfConfig":"7"},{"size":470,"mtime":1682023079787,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1646074259835,"results":"9","hashOfConfig":"7"},{"size":3971,"mtime":1674766303716,"results":"10","hashOfConfig":"7"},{"size":128,"mtime":1682022367212,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1o2fu69",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"/Users/stephenavino/Development/Code/stavino-dot-com/src/index.js",[],[],["29","30"],"/Users/stephenavino/Development/Code/stavino-dot-com/src/App.js",["31","32","33","34","35","36"],[],"/Users/stephenavino/Development/Code/stavino-dot-com/src/reportWebVitals.js",[],[],"/Users/stephenavino/Development/Code/stavino-dot-com/src/components/Header.js",["37","38","39","40","41"],[],"import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\n\nconst pages = ['Home', 'About', 'Resume', 'Portfolio', 'Blog'];\n\nfunction AppTopBar() {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"/\"\n            sx={{\n              mr: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            LOGO\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"\"\n            sx={{\n              mr: 2,\n              display: { xs: 'flex', md: 'none' },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            LOGO\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                key={page}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                {page}\n              </Button>\n            ))}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\nexport default AppTopBar;\n","/Users/stephenavino/Development/Code/stavino-dot-com/src/components/Homepage.js",[],[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":9,"nodeType":"48","messageId":"49","endLine":1,"endColumn":14},{"ruleId":"46","severity":1,"message":"50","line":1,"column":16,"nodeType":"48","messageId":"49","endLine":1,"endColumn":29},{"ruleId":"46","severity":1,"message":"51","line":1,"column":31,"nodeType":"48","messageId":"49","endLine":1,"endColumn":42},{"ruleId":"46","severity":1,"message":"52","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":18},{"ruleId":"46","severity":1,"message":"53","line":2,"column":20,"nodeType":"48","messageId":"49","endLine":2,"endColumn":29},{"ruleId":"46","severity":1,"message":"54","line":2,"column":31,"nodeType":"48","messageId":"49","endLine":2,"endColumn":38},{"ruleId":"46","severity":1,"message":"55","line":10,"column":8,"nodeType":"48","messageId":"49","endLine":10,"endColumn":14},{"ruleId":"46","severity":1,"message":"56","line":12,"column":8,"nodeType":"48","messageId":"49","endLine":12,"endColumn":15},{"ruleId":"46","severity":1,"message":"57","line":20,"column":10,"nodeType":"48","messageId":"49","endLine":20,"endColumn":22},{"ruleId":"46","severity":1,"message":"58","line":25,"column":9,"nodeType":"48","messageId":"49","endLine":25,"endColumn":27},{"ruleId":"46","severity":1,"message":"59","line":33,"column":9,"nodeType":"48","messageId":"49","endLine":33,"endColumn":28},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'createTheme' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'Avatar' is defined but never used.","'Tooltip' is defined but never used.","'anchorElUser' is assigned a value but never used.","'handleOpenUserMenu' is assigned a value but never used.","'handleCloseUserMenu' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]